{"file":"index-BvrjbVxK.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAyhB0B,cAAc;AAExC,MAAA,cAAe;AAAA,EACb,SAAS;AAAA,IACP,YAAY,IAAI;AACd,SAAG,MAAM,UAAU;AAAA,IACrB;AAAA,IACA,MAAM,IAAI,MAAM;AACX,SAAA;AACH,SAAG,MAAM,aAAa;AACtB,SAAG,MAAM,UAAU;AACd;IACP;AAAA,IACA,MAAM,IAAI,MAAM;AACd,SAAG,MAAM,aAAa;AACtB,SAAG,MAAM,UAAU;AACd;IACP;AAAA,IACA,YAAY,OAAO;AACjB,aAAO,kBAAkB,KAAK;AAAA,IAChC;AAAA,EACF;AACF;;;;;AA1aM,UAAA,eAAe,gBAAgB,MAAM;AAErC,UAAA,UAAU,IAAI,IAAI;AAClB,UAAA,SAAS,IAAI,CAAA,CAAE;AACf,UAAA,aAAa,IAAI,CAAA,CAAE;AACX,aAAS;AACvB,UAAM,QAAQ;AACd,QAAI,WAAW,SAAS,MAAM,MAAM,QAAQ;AAmCtC,UAAA,iBAAiB,SAAS,MAAM;AAEhC,UAAA,CAAC,OAAO,SAAS,OAAO,MAAM,WAAW,UAAU;AAGvD,aAAO,OAAO,MAAM,MAAA,EAAQ,KAAK,CAAC,GAAG,MAAM;AACzC,cAAM,QAAQ,IAAI,KAAK,EAAE,UAAU;AACnC,cAAM,QAAQ,IAAI,KAAK,EAAE,UAAU;AACnC,eAAO,QAAQ;AAAA,MAAA,CAChB;AAAA,IAAA,CACF;AA8JqB,QAAI,IAAI;AA+GlB,QAAI,IAAI;AACR,QAAI,IAAI;AACH,QAAI,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["../../../../pages/index.vue"],"sourcesContent":["<template>\n    <div>\n\n        <div class=\"overlay bg-white\" id=\"overlay\"></div>\n\n        <div id=\"header-component\">\n            <Header></Header>\n        </div>\n\n        <transition name=\"fade\"\n        @before-enter=\"beforeEnter\"\n        @enter=\"enter\"\n        @leave=\"leave\">\n            <div v-if=\"loading\" class=\"bg-white w-screen h-[100dvh] fixed top-0 left-0\">\n            </div>\n            <div v-else>\n\n                <main id=\"mainHome\"\n                @scroll.passive=\"checkVisibilityMobile\"\n                ref=\"mainHome\">\n                    <section id=\"s_1\">\n                        <div id=\"downArrow\"></div>\n                    </section>\n\n                    <div v-if=\"!isMobile\" id=\"leftArrow\" class=\"arrow\"></div>\n                    <div v-if=\"!isMobile\" id=\"rightArrow\" class=\"arrow\"></div>\n                    <!-- <div class=\"overlay bg-white\" id=\"overlay_slide\"></div> -->\n\n                    <section id=\"s_2\" ref=\"s_2\" class=\"snap-always\"\n                    @mousemove=\"handleMouseMove\" \n                    @mouseleave=\"handleMouseLeave\"\n                    @mouseenter=\"handleMouseEnter\"\n                    @click=\"handleClick\">\n                        <!-- <template v-for=\"slide in myCarousel.slides\" :key=\"slide._key\">\n                            <figure v-if=\"slide.image\" class=\"slide\">\n                                <img :src=\"urlFor(slide.image.asset._ref).url()\" alt=\"Carousel Image\" />\n                            </figure>\n                        </template> -->\n                        <template v-if=\"myCarousel[0]\" v-for=\"slide in myCarousel[0].slides\" :key=\"slide._key\">\n\n                            <figure v-if=\"!isMobile && slide.image\" class=\"slide\">\n                                <img :src=\"imageBuilder.image(slide.image.asset).url()\" alt=\"Carousel Image\" />\n                            </figure>\n\n                            <figure v-if=\"isMobile && slide.image_mobile\" class=\"slide\">\n                                <img :src=\"imageBuilder.image(slide.image_mobile.asset).url()\" alt=\"Carousel Image\" />\n                            </figure>\n                            \n                        </template>\n\n                        <!-- <figure class=\"slide\">\n                            <img src=\"https://freight.cargo.site/t/original/i/eb7592ba1f63f887f8bfefe0682439c59867bdf787af1ada187e871fa91a7447/_Z9A3926.jpg\">\n                        </figure>\n                        <figure class=\"slide\">\n                            <img src=\"https://freight.cargo.site/t/original/i/2a7cd7086a218f34084b4a2bcba1682f8eeec2272068baf14898a753f0279647/_Z9A3936.jpg\">\n                        </figure>\n                        <figure class=\"slide\">\n                            <img src=\"https://freight.cargo.site/t/original/i/9f672c4aeda59bf5c45247795ff7f5cf9bbd74b9e5e6043597515054de662b08/_Z9A3872_a.jpg\">\n                        </figure> -->\n                    </section>\n\n                    <section id=\"s_3\" ref=\"s_3\">\n                        <p>Trasformare uno spazio in un luogo<template v-if=\"!isMobile\"><br></template>\n                        di senso che faccia star bene chi<template v-if=\"!isMobile\"><br></template>\n                        ci trascorre del tempo è per me<template v-if=\"!isMobile\"><br></template>\n                        una gioia, ma non solo: è il mezzo<template v-if=\"!isMobile\"><br></template>\n                        con cui faccio la mia parte nella<template v-if=\"!isMobile\"><br></template>\n                        società civile.</p>\n                    </section>\n\n                    <section id=\"s_4\">\n                        <div class=\"projectGrid relative h-[100dvh] w-screen\">\n                            <template v-for=\"project in sortedProjects\" :key=\"project._key\">\n                                <a v-bind:href=\"'/progetti/'+ project.slug.current\"\n                                class=\"flex cursor-none\n                                flex-col md:flex-row\"\n                                :style=\"project.gridSpan ? {\n                                    gridColumn: project.gridSpan.columnStart + ' / span ' + project.gridSpan.columnSpan,\n                                    gridRow: project.gridSpan.rowStart + ' / span ' + project.gridSpan.rowSpan\n                                } : {}\">\n                                    <!-- <p v-html=\"project.title\"></p> -->\n                                    <figure v-if=\"!isMobile && project.homepage_image\"\n                                    class=\"w-full group\">\n                                        <p class=\"projectName opacity-0 group-hover:opacity-100 transition-opacity duration-500\n                                        fixed pointer-events-none cursor-follower\">\n                                            <span class=\"circle\"></span>\n                                            <span v-html=\"project.title\"></span>\n                                        </p>\n                                        <img\n                                        :src=\"imageBuilder.image (project.homepage_image)\"\n                                        class=\"pic w-full h-full object-cover\"/>\n                                    </figure>\n                                    <figure v-if=\"isMobile && project.homepage_image_mobile\"\n                                    class=\"w-full group\">\n                                        <p class=\"projectName opacity-0 group-hover:opacity-100 transition-opacity duration-500\n                                        fixed pointer-events-none cursor-follower\">\n                                            <span class=\"circle\"></span>\n                                            <span v-html=\"project.title\"></span>\n                                        </p>\n                                        <img\n                                        :src=\"imageBuilder.image (project.homepage_image_mobile)\"\n                                        class=\"pic w-full h-full object-cover\"/>\n                                    </figure>\n                                    <p v-if=\"isMobile\" v-html=\"project.title\"></p>\n                                </a>\n                            </template>\n\n\n                            <div id=\"footer-component\" class=\"mt-4 l-0 row-start-[134] row-span-10\n                            relative md:absolute w-[calc(100vw-40px)] md:w-screen\">\n                                <Footer></Footer>\n                            </div>\n                        </div>\n\n                    </section>\n                </main>\n\n            </div>\n        </transition>\n\n        \n    </div>\n</template>\n  \n\n<script setup>\nimport { ref, onMounted, nextTick } from 'vue';\nimport { useRoute } from 'vue-router';\nimport sanity from \"../sanity/sanity.js\";\nimport imageUrlBuilder from \"@sanity/image-url\";\nimport { useMyStore } from '/store/store.js';\nimport groq from \"groq\"; // Ensure you have groq imported if used in your setup\n\nconst imageBuilder = imageUrlBuilder(sanity);\n\nconst loading = ref(true);\nconst myData = ref([]);\nconst myCarousel = ref([]);\nconst route = useRoute();\nconst store = useMyStore();\nlet isMobile = computed(() => store.isMobile)\n\n\nconst fetchData = async () => {\n    loading.value = true;\n    try {\n        const data = await sanity.fetch(groq`*[_type == \"project\"]`);\n        myData.value = data;\n    } catch (error) {\n        console.error(error);\n    } finally {\n        loading.value = false;\n    }\n};\nconst fetchDataCarousel = async () => {\n    loading.value = true;\n    try {\n        const data = await sanity.fetch(groq`*[_type == \"homepage\"]{\n            slides[]{\n                _key,\n                _type,\n                title,\n                image,\n                image_mobile,\n            }\n        }[0...50]`);\n        myCarousel.value = data;\n        //console.log(myCarousel._rawValue[0].slides)\n    } catch (error) {\n        console.error(error);\n    } finally {\n        loading.value = false;\n    }\n};\n\nconst sortedProjects = computed(() => {\n  // Check if myData is defined and not empty\n  if (!myData.value || myData.value.length === 0) return [];\n\n  // Sort projects by the creation date in descending order\n  return myData.value.slice().sort((a, b) => {\n    const dateA = new Date(a._createdAt);\n    const dateB = new Date(b._createdAt);\n    return dateA - dateB;  // For descending order\n  });\n});\n\nconst changeBackgroundColor = () => {\n    const colors = [\"#723137\", \"#7d91a0\", \"#c3c2be\"];\n    const randomColor = colors[Math.floor(Math.random() * colors.length)];\n    const element = document.getElementById(\"s_1\");\n\n    if (element) {\n        element.style.backgroundColor = randomColor;\n    } else {\n        console.error(\"Element not found!\");\n    }\n};\n\nconst setupVisibilityToggle = () => {\n    const observer = new IntersectionObserver(entries => {\n        if(isMobile.value){return}\n        entries.forEach(entry => {\n            const sectionId = entry.target.getAttribute('id');\n            const spansRow = document.querySelector('#spansRow');\n            const spans = document.querySelectorAll('#head a.first');\n            const spansMenu = document.querySelectorAll('#head a.menu');\n            const spansMenuMobile = document.querySelector('#head #spansRowMobile p.menu');\n            const myMains = document.querySelectorAll('#head a.main');\n\n            if (entry.isIntersecting) {\n                if (entry.target.id == \"s_2\") {\n                    entry.target.classList.add(\"inView\")\n                } else {\n                    document.getElementById('s_2').classList.remove(\"inView\")\n                }\n\n                if (entry.target.id == \"s_4\") {\n                    spansRow.classList.add('visible');\n                    spansMenu.forEach(span => {\n                        span.classList.add('visible');\n                    });\n\n                    document.querySelector('#head p.arch').classList.add('invisible');\n                    myMains[0].classList.add('small');\n                    myMains[1].classList.add('small');\n                    \n                    document.querySelector('#head a.blankSpace').classList.add('invisible');\n                    document.querySelector('#head a.first').classList.add('invisible');\n                } else {\n                    spansRow.classList.remove('visible');\n                    spansMenu.forEach(span => {\n                        span.classList.remove('visible');\n                    });\n                    \n                    document.querySelector('#head p.arch').classList.remove('invisible');\n                    myMains[0].classList.remove('small');\n                    myMains[1].classList.remove('small');\n                    \n                    document.querySelector('#head a.blankSpace').classList.remove('invisible');\n                    document.querySelector('#head a.first').classList.remove('invisible');\n                }\n\n                if (entry.target.id == \"s_4\") {\n                    spans.forEach(span => {\n                        span.classList.add('!hidden');\n                    });\n                    document.getElementById(\"head\").style.color = 'white';\n                    document.getElementById(\"head\").style.mixBlendMode = 'difference';\n                    document.getElementById(\"head\").classList.add('s4');\n                } else if (entry.target.id == \"s_1\") {\n                    document.getElementById(\"head\").style.color = 'white';\n                    document.getElementById(\"head\").style.mixBlendMode = 'normal';\n                    document.getElementById(\"head\").classList.remove('s4');\n                    \n                    spans.forEach(span => {\n                        span.style.opacity = '1';\n                        span.style.pointerEvents = 'auto';\n                    });\n                    myMains[0].classList.remove('show-dot');\n                    myMains[1].classList.remove('show-dot');\n                } else {\n                    document.getElementById(\"head\").style.color = 'black';\n                    document.getElementById(\"head\").style.mixBlendMode = 'normal';\n                    spans.forEach(span => {\n                        span.classList.remove('!hidden');\n                        span.style.opacity = '0';\n                        span.style.pointerEvents = 'none';\n                    });\n                    myMains[0].classList.add('show-dot');\n                    myMains[1].classList.add('show-dot');\n                }\n            }\n        });\n    }, { threshold: 0.5 }); // Trigger when at least 50% of the section is in view\n    \n    const sections = document.querySelectorAll('section[id^=\"s_\"]');\n    sections.forEach(section => {\n        observer.observe(section);\n    });\n};\n\n\n\nonMounted(async () => {\n    await fetchData();\n    await fetchDataCarousel();\n    await nextTick();\n    changeBackgroundColor();\n    setupVisibilityToggle();\n\n    const scrollToHash = () => {\n        const hash = route.hash;\n        if (hash) {\n            const element = document.querySelector(hash);\n            if (element) {\n                document.getElementById('overlay').classList.add('show');\n                element.scrollIntoView({ behavior: 'smooth' });\n                \n                setTimeout(() => {\n                    document.getElementById('overlay').classList.remove('show')\n                }, 1000)\n            }\n        }\n    };\n    setTimeout(() => {\n        scrollToHash(), 600\n    })\n\n    const followers = document.querySelectorAll('.cursor-follower');\n    const updateFollowerPositions = (event) => {\n        if(isMobile.value){return}\n        const x = event.clientX;\n        const y = event.clientY;\n        followers.forEach((follower) => {\n        follower.style.left = `${x}px`;\n        follower.style.top = `${y}px`;\n        });\n    };\n\n    document.addEventListener('mousemove', updateFollowerPositions);\n\n    // Clean up the event listener on unmount\n    /* onBeforeUnmount(() => {\n        document.removeEventListener('mousemove', updateFollowerPositions);\n    }); */\n\n    window.addEventListener('keydown', (event) => {\n        if (event.key === 'ArrowLeft') {\n            handleClick('left');\n        } else if (event.key === 'ArrowRight') {\n            handleClick('right');\n        }\n    });\n});\n\n\n\nlet firstTimeout;\nlet myTimeout;\nlet myInterval;\nlet currentIndex = 0;\nlet figures;\nconst snapContainer = ref(null);\n\nlet timeScroll = 200;\nlet stopForeverScrollMobile = false;\n\nonMounted(() => {\n    setTimeout(() => {\n        if(isMobile.value){return}\n        if (snapContainer.value) {\n            figures = snapContainer.value.querySelectorAll('.slide');\n\n            if(snapContainer.value.classList.contains('inView')){\n                myTimeout = setTimeout(() => {\n                    idleScroll()\n                }, 3000);\n            }\n        }\n    }, 1000);\n})\n\nfunction idleScroll() {\n\n    if(isMobile.value){\n        timeScroll = 2000;\n    } else {\n        timeScroll = 200;\n    }\n    myInterval = setInterval(() => {\n        if(stopForeverScrollMobile == true){\n            clearTimeout(myTimeout);\n            if (myInterval) {\n                clearInterval(myInterval);\n            }\n            return\n        }\n        //currentIndex = (currentIndex + 1) % figures.length;\n        //figures[currentIndex].scrollIntoView({ behavior: 'smooth', block: 'nearest', inline: 'center' });\n        \n        //replicate click\n        const container = document.getElementById('s_2');\n        /* const overlay = document.getElementById('overlay_slide');\n        if (overlay.classList.contains('show')) {\n            return;\n        } */\n        const slides = Array.from(container.children).filter(child => child.classList.contains('slide'));\n        const currentIndex = slides.findIndex(slide => slide.getBoundingClientRect().left >= container.getBoundingClientRect().left - 10);\n        let nextIndex;\n        nextIndex = currentIndex < slides.length - 1 ? currentIndex + 1 : 0;\n        //overlay.classList.add('show');\n        setTimeout(() => {\n            if (currentIndex < slides.length - 1) {\n                //console.log(currentIndex, 'a')\n                slides[currentIndex + 1].scrollIntoView({ behavior: 'smooth', inline: 'start' });\n            } else {\n                //console.log(currentIndex, 'a')\n                slides[0].scrollIntoView({ behavior: 'smooth', inline: 'start' });\n            }\n        }, timeScroll);\n\n    }, 4000);\n}\n\nconst handleMouseMove = (event) => {\n    if(isMobile.value){return}\n\n    clearTimeout(myTimeout);\n    if (myInterval) {\n        clearInterval(myInterval);\n    }\n    \n    const container = event.currentTarget;\n    const mouseX = event.clientX;\n    const mouseY = event.clientY;\n\n    document.documentElement.style.setProperty('--mouse-x', `${mouseX}px`);\n    document.documentElement.style.setProperty('--mouse-y', `${mouseY}px`);\n\n    const containerWidth = container.offsetWidth;\n    if (mouseX < containerWidth / 2) {\n        document.querySelector('#leftArrow').classList.add('visible');\n        document.querySelector('#rightArrow').classList.remove('visible');\n    } else {\n        document.querySelector('#leftArrow').classList.remove('visible');\n        document.querySelector('#rightArrow').classList.add('visible');\n    }\n\n    if(document.querySelector('#s_2').classList.contains('inView')){\n        idleScroll()\n    }\n};\nconst handleMouseLeave = () => {\n    if(isMobile.value){return}\n    \n    document.querySelector('#leftArrow').classList.remove('visible');\n    document.querySelector('#rightArrow').classList.remove('visible');\n\n    clearTimeout(myTimeout);\n    if (myInterval) {\n        clearInterval(myInterval);\n    }\n};\nconst handleMouseEnter = (event) => {\n    if(isMobile.value){return}\n    handleMouseMove(event);\n\n    myTimeout = setTimeout(() => {\n        idleScroll()\n    }, 4000);\n};\n\n\nconst s_2 = ref(null);\nconst s_3 = ref(null);\nconst mainHome = ref(null);\nfunction checkVisibilityMobile() {\n    if(!isMobile.value){return}\n\n    if(s_3.value.getBoundingClientRect().top < window.innerHeight / 2){\n        store.headerBlack = true;\n    } else {\n        store.headerBlack = false;\n    }\n\n    if((s_2.value.getBoundingClientRect().top < window.innerHeight / 2) && (s_2.value.getBoundingClientRect().bottom > 0)){\n        idleScroll();\n    } else if(s_2.value.getBoundingClientRect().top < 0) {\n        stopForeverScrollMobile = true;\n    }\n    \n}\n\n\n\nconst handleClick = (event) => {\n\n    /* const overlay = document.getElementById('overlay_slide');\n\n    if (overlay.classList.contains('show')) {\n        return;\n    } */\n\n    stopForeverScrollMobile = true\n\n    let mouseX\n    let container\n    let containerWidth\n\n    if(event != 'left' && event != 'right'){\n        event.preventDefault();\n        container = event.currentTarget;\n        mouseX = event.clientX - container.getBoundingClientRect().left;\n        containerWidth = container.offsetWidth;\n    } else {\n        container = document.getElementById('s_2');\n    }\n\n    const slides = Array.from(container.children).filter(child => child.classList.contains('slide'));\n    const currentIndex = slides.findIndex(slide => slide.getBoundingClientRect().left >= container.getBoundingClientRect().left - 10);\n\n    let nextIndex;\n    if (mouseX < containerWidth / 2 || event=='left') {\n        nextIndex = currentIndex > 0 ? currentIndex - 1 : slides.length - 1;\n    } else {\n        nextIndex = currentIndex < slides.length - 1 ? currentIndex + 1 : 0;\n    }\n\n    //overlay.classList.add('show');\n    setTimeout(() => {\n        if (mouseX < containerWidth / 2 || event=='left') {\n            if (currentIndex > 0) {\n                slides[currentIndex - 1].scrollIntoView({ behavior: 'smooth', inline: 'start' });\n            } else {\n                slides[slides.length - 1].scrollIntoView({ behavior: 'smooth', inline: 'start' });\n            }\n        } else {\n            if (currentIndex < slides.length - 1) {\n                slides[currentIndex + 1].scrollIntoView({ behavior: 'smooth', inline: 'start' });\n            } else {\n                slides[0].scrollIntoView({ behavior: 'smooth', inline: 'start' });\n            }\n        }\n\n        /* setTimeout(() => {\n            overlay.classList.remove('show');\n        }, 300); */\n\n    }, 200);\n};\n\n</script>\n\n\n\n<script>\nconst { width, height } = useWindowSize();\n\nexport default {\n  methods: {\n    beforeEnter(el) {\n      el.style.opacity = 0;\n    },\n    enter(el, done) {\n      el.offsetHeight; // Trigger reflow\n      el.style.transition = 'opacity 2s';\n      el.style.opacity = 1;\n      done();\n    },\n    leave(el, done) {\n      el.style.transition = 'opacity 2s';\n      el.style.opacity = 0;\n      done();\n    },\n    imageUrlFor(image) {\n      return `path/to/images/${image}`;\n    }\n  }\n};\n</script>"],"version":3}