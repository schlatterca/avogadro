"use strict";var e=require("@sanity/client"),t=require("@sanity/client/stega"),n=require("./index.cjs");let r;const o=new Uint8Array(16);function s(){if(!r&&(r=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!r))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return r(o)}const i=[];for(let e=0;e<256;++e)i.push((e+256).toString(16).slice(1));var a={randomUUID:typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};function c(e,t,n){if(a.randomUUID&&!t&&!e)return a.randomUUID();const r=(e=e||{}).random||(e.rng||s)();return r[6]=15&r[6]|64,r[8]=63&r[8]|128,function(e,t=0){return i[e[t+0]]+i[e[t+1]]+i[e[t+2]]+i[e[t+3]]+"-"+i[e[t+4]]+i[e[t+5]]+"-"+i[e[t+6]]+i[e[t+7]]+"-"+i[e[t+8]]+i[e[t+9]]+"-"+i[e[t+10]]+i[e[t+11]]+i[e[t+12]]+i[e[t+13]]+i[e[t+14]]+i[e[t+15]]}(r)}const d=["channel/disconnect","channel/response","channel/heartbeat"],u=["handshake/syn","handshake/syn-ack","handshake/ack"],p=e=>d.some((t=>t===e)),l=e=>u.some((t=>t===e)),f=({data:e={}})=>"object"==typeof e&&null!==e&&!Array.isArray(e)&&!("domain"in e)&&["id","type","from","to"].every((t=>t in e))&&e.type.startsWith("handshake/");function y(e){const t=window.self!==window.top||window.opener,n={buffer:[],id:null,origin:null,source:null,status:"connecting"};function r(t,r){if(l(t)||p(t)||"connecting"!==n.status&&"reconnecting"!==n.status){if(n.id&&n.origin&&n.source){const o={connectionId:n.id,data:r,domain:"sanity/channels",from:e.id,id:c(),to:e.connectTo,type:t};try{n.source.postMessage(o,{targetOrigin:n.origin})}catch{throw new Error(`Failed to postMessage '${o.id}' on '${e.id}'`)}}}else n.buffer.push({type:t,data:r})}function o(t){if(f(t))console.error("Visual editing package mismatch detected! Please ensure you are using the latest version of Sanity Studio and any packages listed here:\nhttps://github.com/sanity-io/visual-editing");else if(function(t){const{data:n}=t;return"sanity/channels"===n.domain&&n.to===e.id&&n.from===e.connectTo&&"channel/response"!==n.type}(t)){const{data:e}=t;if(n.origin&&t.origin!==n.origin)return;if(t.source&&n.source!==t.source&&(n.source=t.source),l(e.type)&&e.data){if("handshake/syn"===e.type)return n.origin=t.origin,n.id=e.data.id,a("connecting"),void r("handshake/syn-ack",{id:n.id});if("handshake/ack"===e.type&&e.data.id===n.id)return void a("connected")}else if(e.connectionId===n.id&&t.origin===n.origin){if("channel/disconnect"===e.type)return void a("disconnected");{const t=[e.type,e.data];s.forEach((e=>{e(...t)})),r("channel/response",{responseTo:e.id})}return}}}const s=new Set;const i=new Set;function a(e){n.status=e,i.forEach((t=>{t(e)})),"connected"===e&&function(){const e=[...n.buffer];n.buffer.splice(0,n.buffer.length),e.forEach((({type:e,data:t})=>{r(e,t)}))}()}return window.addEventListener("message",o,!1),a("connecting"),{destroy:function(){["disconnected"].includes(n.status)||a("disconnected"),s.clear(),i.clear(),window.removeEventListener("message",o,!1)},inFrame:t,send:function(e,t){r(e,t)},subscribe:function(e){return s.add(e),()=>s.delete(e)},onStatusUpdate:function(e){return i.add(e),()=>i.delete(e)}}}exports.enableLiveMode=function(r){const{client:o,setFetcher:s,onConnect:i,onDisconnect:a}=r;if(!(o&&o instanceof e.SanityClient))throw new Error(`Expected \`client\` to be an instance of SanityClient or SanityStegaClient: ${JSON.stringify(o)}`);const{projectId:c,dataset:d}=o.config(),u=n.a("previewDrafts"),p=n.a(!1),l=new Map,f=y({id:"loaders",connectTo:"presentation"});let g;f.onStatusUpdate((e=>{"connected"===e?p.set(!0):"disconnected"===e&&p.set(!1)})),f.subscribe(((e,n)=>{if("loader/perspective"===e&&n.projectId===c&&n.dataset===d){if("published"!==n.perspective&&"previewDrafts"!==n.perspective)throw new Error(`Unsupported perspective: ${JSON.stringify(n.perspective)}`);u.set(n.perspective),S()}else if("loader/query-change"===e&&n.projectId===c&&n.dataset===d){const{perspective:e,query:r,params:s}=n;void 0!==n.result&&void 0!==n.resultSourceMap&&o.config().stega.enabled?l.set(JSON.stringify({perspective:e,query:r,params:s}),{...n,result:t.stegaEncodeSourceMap(n.result,n.resultSourceMap,o.config().stega)}):l.set(JSON.stringify({perspective:e,query:r,params:s}),n),S()}}));const v=p.listen((e=>{e?(g=s({hydrate:(e,t,n)=>{const r=(null==n?void 0:n.perspective)||u.get(),o=JSON.stringify({perspective:r,query:e,params:t}),s=l.get(o);return void 0!==(null==s?void 0:s.result)&&void 0!==(null==s?void 0:s.resultSourceMap)?{loading:!1,error:void 0,data:s.result,sourceMap:s.resultSourceMap,perspective:r}:{loading:!0===p.value&&void 0===(null==n?void 0:n.data)||void 0===(null==n?void 0:n.sourceMap),error:void 0,data:null==n?void 0:n.data,sourceMap:null==n?void 0:n.sourceMap,perspective:(null==n?void 0:n.perspective)||"published"}},fetch:(e,t,n,r)=>{try{const o=m(e,t,n);if(r.signal.addEventListener("abort",(()=>{o(),S()}),{once:!0}),S(),n.setKey("error",void 0),r.signal.aborted)return}catch(e){n.setKey("error",e),n.setKey("loading",!1)}}}),null==i||i()):(null==g||g(),null==a||a())})),h=new Set,m=(e,t,n)=>{const r={query:e,params:t,$fetch:n};h.add(r),w();const o=setInterval((()=>w(!0)),1e3);return()=>{clearInterval(o),h.delete(r),w()}},w=e=>{if(!f)throw new Error("No channel");const t=u.get();for(const{query:n,params:r,$fetch:o}of h)f.send("loader/query-listen",{projectId:c,dataset:d,perspective:t,query:n,params:r,heartbeat:1e3}),!e&&!0===p.value&&o.setKey("loading",!0),o.setKey("perspective",t)};function S(){var e,t;const n=u.get(),r=[];for(const{query:o,params:s,$fetch:i}of h){const a=JSON.stringify({perspective:n,query:o,params:s}),c=l.get(a);c&&(i.set({data:c.result,error:void 0,loading:!1,perspective:n,sourceMap:c.resultSourceMap}),r.push(...null!=(t=null==(e=c.resultSourceMap)?void 0:e.documents)?t:[]))}null==f||f.send("loader/documents",{projectId:c,dataset:d,perspective:n,documents:r})}return()=>{null==g||g(),v(),f.destroy()}};//# sourceMappingURL=enableLiveMode.cjs.map
