import type { AsyncData, AsyncDataOptions } from 'nuxt/app';
import type { SanityClient, ClientConfig } from '../client';
export interface SanityHelper {
    client: SanityClient;
    config: ClientConfig;
    fetch: SanityClient['fetch'];
    setToken: (token: string) => void;
}
export declare const useSanity: (client?: string) => SanityHelper;
interface UseSanityQueryOptions<T> extends AsyncDataOptions<T> {
    client?: string;
}
export declare const useSanityQuery: <T = unknown, E = Error>(query: string, _params?: Record<string, unknown>, _options?: UseSanityQueryOptions<T>) => AsyncData<T | null, E>;
export declare const useLazySanityQuery: <T = unknown, E = Error>(query: string, _params?: Record<string, unknown>, _options?: UseSanityQueryOptions<T>) => AsyncData<T | null, E>;
export {};
